{"version":3,"sources":["../node_modules/prop-types/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","Todo/AddTodo.js"],"names":["module","exports","require","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","AddTodo","onCreate","input","defaultValue","useState","value","setValue","bind","onChange","event","target","clear","useInputValue","style","marginBottom","onSubmit","preventDefault","trim","className","type","prototype"],"mappings":"oGAiBEA,EAAOC,QAAUC,EAAQ,GAARA,I,gCCRnB,IAAIC,EAAuBD,EAAQ,IAEnC,SAASE,KACT,SAASC,KACTA,EAAuBC,kBAAoBF,EAE3CJ,EAAOC,QAAU,WACf,SAASM,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWV,EAAf,CAIA,IAAIW,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIE,KAAO,sBACLF,GAGR,SAASG,IACP,OAAOV,EAFTA,EAAKW,WAAaX,EAMlB,IAAIY,EAAiB,CACnBC,MAAOb,EACPc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASX,EACTY,QAAStB,EACTuB,YAAavB,EACbwB,WAAYd,EACZe,KAAMzB,EACN0B,SAAUhB,EACViB,MAAOjB,EACPkB,UAAWlB,EACXmB,MAAOnB,EACPoB,MAAOpB,EAEPqB,eAAgBjC,EAChBC,kBAAmBF,GAKrB,OAFAe,EAAeoB,UAAYpB,EAEpBA,I,gCCnDTnB,EAAOC,QAFoB,gD,mFCQ3B,SAASuC,EAAT,GAA8B,IAAZC,EAAW,EAAXA,SAERC,EAhBV,WAAyC,IAAlBC,EAAiB,uDAAJ,GAAI,EACVC,mBAASD,GADC,mBAC7BE,EAD6B,KACtBC,EADsB,KAGpC,MAAO,CACHC,KAAK,CACDF,QACAG,SAAU,SAAAC,GAAK,OAAIH,EAASG,EAAMC,OAAOL,SAE7CM,MAAO,kBAAML,EAAS,KACtBD,MAAO,kBAAMA,IAOHO,CAAc,IAU5B,OACI,0BAAMC,MAAO,CAACC,aAAc,QAASC,SATzC,SAAuBN,GACnBA,EAAMO,iBAEHd,EAAMG,QAAQY,SACbhB,EAASC,EAAMG,SACfH,EAAMS,WAKN,2CAAWT,EAAMK,KAAjB,CAAwBW,UAAU,gBAClC,4BAAQC,KAAK,SAASD,UAAU,aAAhC,aAIZlB,EAAQoB,UAAY,CAChBnB,SAAUF,IAAUjB,KAAKJ,YAEdsB","file":"static/js/3.2f6a9e24.chunk.js","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction useInputValue(defaultValue='') {\r\n    const [value, setValue] = useState(defaultValue)\r\n\r\n    return {\r\n        bind:{\r\n            value,\r\n            onChange: event => setValue(event.target.value)\r\n        },\r\n        clear: () => setValue(''),\r\n        value: () => value\r\n    }\r\n}\r\n\r\n\r\nfunction AddTodo({onCreate}) {\r\n   \r\n    const input = useInputValue('')\r\n\r\n    function sumbitHandler(event) {\r\n        event.preventDefault()\r\n\r\n        if(input.value().trim()){\r\n            onCreate(input.value())\r\n            input.clear()\r\n        }\r\n    }\r\n    return(\r\n        <form style={{marginBottom: '1rem'}} onSubmit={sumbitHandler}>\r\n            <input {...input.bind}  className='add__input'/ >\r\n            <button type=\"sumbit\" className='add__todo'>Add todo</button>\r\n        </form>\r\n    )\r\n}\r\nAddTodo.prototype = {\r\n    onCreate: PropTypes.func.isRequired\r\n}\r\nexport default AddTodo"],"sourceRoot":""}